/*
 * This file is generated by jOOQ.
 */
package io.surati.gap.payment.jooq.generated.tables.records;


import io.surati.gap.payment.jooq.generated.tables.PayThirdPartyPaymentMeanAllowed;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PayThirdPartyPaymentMeanAllowedRecord extends UpdatableRecordImpl<PayThirdPartyPaymentMeanAllowedRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.pay_third_party_payment_mean_allowed.third_party_id</code>.
     */
    public void setThirdPartyId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.pay_third_party_payment_mean_allowed.third_party_id</code>.
     */
    public Long getThirdPartyId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.pay_third_party_payment_mean_allowed.mean_type_id</code>.
     */
    public void setMeanTypeId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.pay_third_party_payment_mean_allowed.mean_type_id</code>.
     */
    public String getMeanTypeId() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PayThirdPartyPaymentMeanAllowed.PAY_THIRD_PARTY_PAYMENT_MEAN_ALLOWED.THIRD_PARTY_ID;
    }

    @Override
    public Field<String> field2() {
        return PayThirdPartyPaymentMeanAllowed.PAY_THIRD_PARTY_PAYMENT_MEAN_ALLOWED.MEAN_TYPE_ID;
    }

    @Override
    public Long component1() {
        return getThirdPartyId();
    }

    @Override
    public String component2() {
        return getMeanTypeId();
    }

    @Override
    public Long value1() {
        return getThirdPartyId();
    }

    @Override
    public String value2() {
        return getMeanTypeId();
    }

    @Override
    public PayThirdPartyPaymentMeanAllowedRecord value1(Long value) {
        setThirdPartyId(value);
        return this;
    }

    @Override
    public PayThirdPartyPaymentMeanAllowedRecord value2(String value) {
        setMeanTypeId(value);
        return this;
    }

    @Override
    public PayThirdPartyPaymentMeanAllowedRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PayThirdPartyPaymentMeanAllowedRecord
     */
    public PayThirdPartyPaymentMeanAllowedRecord() {
        super(PayThirdPartyPaymentMeanAllowed.PAY_THIRD_PARTY_PAYMENT_MEAN_ALLOWED);
    }

    /**
     * Create a detached, initialised PayThirdPartyPaymentMeanAllowedRecord
     */
    public PayThirdPartyPaymentMeanAllowedRecord(Long thirdPartyId, String meanTypeId) {
        super(PayThirdPartyPaymentMeanAllowed.PAY_THIRD_PARTY_PAYMENT_MEAN_ALLOWED);

        setThirdPartyId(thirdPartyId);
        setMeanTypeId(meanTypeId);
    }
}
