/*
 * This file is generated by jOOQ.
 */
package io.surati.gap.payment.base.db.jooq.generated.tables.records;


import io.surati.gap.payment.base.db.jooq.generated.tables.PayReferenceDocumentAmountView;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PayReferenceDocumentAmountViewRecord extends TableRecordImpl<PayReferenceDocumentAmountViewRecord> implements Record3<Long, Double, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.pay_reference_document_amount_view.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.pay_reference_document_amount_view.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.pay_reference_document_amount_view.amount_paid</code>.
     */
    public void setAmountPaid(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.pay_reference_document_amount_view.amount_paid</code>.
     */
    public Double getAmountPaid() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>public.pay_reference_document_amount_view.amount_left</code>.
     */
    public void setAmountLeft(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.pay_reference_document_amount_view.amount_left</code>.
     */
    public Double getAmountLeft() {
        return (Double) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Double, Double> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Double, Double> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PayReferenceDocumentAmountView.PAY_REFERENCE_DOCUMENT_AMOUNT_VIEW.ID;
    }

    @Override
    public Field<Double> field2() {
        return PayReferenceDocumentAmountView.PAY_REFERENCE_DOCUMENT_AMOUNT_VIEW.AMOUNT_PAID;
    }

    @Override
    public Field<Double> field3() {
        return PayReferenceDocumentAmountView.PAY_REFERENCE_DOCUMENT_AMOUNT_VIEW.AMOUNT_LEFT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Double component2() {
        return getAmountPaid();
    }

    @Override
    public Double component3() {
        return getAmountLeft();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Double value2() {
        return getAmountPaid();
    }

    @Override
    public Double value3() {
        return getAmountLeft();
    }

    @Override
    public PayReferenceDocumentAmountViewRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PayReferenceDocumentAmountViewRecord value2(Double value) {
        setAmountPaid(value);
        return this;
    }

    @Override
    public PayReferenceDocumentAmountViewRecord value3(Double value) {
        setAmountLeft(value);
        return this;
    }

    @Override
    public PayReferenceDocumentAmountViewRecord values(Long value1, Double value2, Double value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PayReferenceDocumentAmountViewRecord
     */
    public PayReferenceDocumentAmountViewRecord() {
        super(PayReferenceDocumentAmountView.PAY_REFERENCE_DOCUMENT_AMOUNT_VIEW);
    }

    /**
     * Create a detached, initialised PayReferenceDocumentAmountViewRecord
     */
    public PayReferenceDocumentAmountViewRecord(Long id, Double amountPaid, Double amountLeft) {
        super(PayReferenceDocumentAmountView.PAY_REFERENCE_DOCUMENT_AMOUNT_VIEW);

        setId(id);
        setAmountPaid(amountPaid);
        setAmountLeft(amountLeft);
    }
}
