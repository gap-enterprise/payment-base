/*
 * This file is generated by jOOQ.
 */
package io.surati.gap.payment.base.db.jooq.generated.tables.records;


import io.surati.gap.payment.base.db.jooq.generated.tables.PayBankNoteBook;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PayBankNoteBookRecord extends UpdatableRecordImpl<PayBankNoteBookRecord> implements Record8<Long, Long, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.pay_bank_note_book.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.pay_bank_note_book.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.pay_bank_note_book.account_id</code>.
     */
    public void setAccountId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.pay_bank_note_book.account_id</code>.
     */
    public Long getAccountId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.pay_bank_note_book.status_id</code>.
     */
    public void setStatusId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.pay_bank_note_book.status_id</code>.
     */
    public String getStatusId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.pay_bank_note_book.mean_type_id</code>.
     */
    public void setMeanTypeId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.pay_bank_note_book.mean_type_id</code>.
     */
    public String getMeanTypeId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.pay_bank_note_book.start_number</code>.
     */
    public void setStartNumber(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.pay_bank_note_book.start_number</code>.
     */
    public String getStartNumber() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.pay_bank_note_book.end_number</code>.
     */
    public void setEndNumber(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.pay_bank_note_book.end_number</code>.
     */
    public String getEndNumber() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.pay_bank_note_book.current_number</code>.
     */
    public void setCurrentNumber(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.pay_bank_note_book.current_number</code>.
     */
    public String getCurrentNumber() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.pay_bank_note_book.prefix_number</code>.
     */
    public void setPrefixNumber(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.pay_bank_note_book.prefix_number</code>.
     */
    public String getPrefixNumber() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, String, String, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, String, String, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PayBankNoteBook.PAY_BANK_NOTE_BOOK.ID;
    }

    @Override
    public Field<Long> field2() {
        return PayBankNoteBook.PAY_BANK_NOTE_BOOK.ACCOUNT_ID;
    }

    @Override
    public Field<String> field3() {
        return PayBankNoteBook.PAY_BANK_NOTE_BOOK.STATUS_ID;
    }

    @Override
    public Field<String> field4() {
        return PayBankNoteBook.PAY_BANK_NOTE_BOOK.MEAN_TYPE_ID;
    }

    @Override
    public Field<String> field5() {
        return PayBankNoteBook.PAY_BANK_NOTE_BOOK.START_NUMBER;
    }

    @Override
    public Field<String> field6() {
        return PayBankNoteBook.PAY_BANK_NOTE_BOOK.END_NUMBER;
    }

    @Override
    public Field<String> field7() {
        return PayBankNoteBook.PAY_BANK_NOTE_BOOK.CURRENT_NUMBER;
    }

    @Override
    public Field<String> field8() {
        return PayBankNoteBook.PAY_BANK_NOTE_BOOK.PREFIX_NUMBER;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getAccountId();
    }

    @Override
    public String component3() {
        return getStatusId();
    }

    @Override
    public String component4() {
        return getMeanTypeId();
    }

    @Override
    public String component5() {
        return getStartNumber();
    }

    @Override
    public String component6() {
        return getEndNumber();
    }

    @Override
    public String component7() {
        return getCurrentNumber();
    }

    @Override
    public String component8() {
        return getPrefixNumber();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getAccountId();
    }

    @Override
    public String value3() {
        return getStatusId();
    }

    @Override
    public String value4() {
        return getMeanTypeId();
    }

    @Override
    public String value5() {
        return getStartNumber();
    }

    @Override
    public String value6() {
        return getEndNumber();
    }

    @Override
    public String value7() {
        return getCurrentNumber();
    }

    @Override
    public String value8() {
        return getPrefixNumber();
    }

    @Override
    public PayBankNoteBookRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PayBankNoteBookRecord value2(Long value) {
        setAccountId(value);
        return this;
    }

    @Override
    public PayBankNoteBookRecord value3(String value) {
        setStatusId(value);
        return this;
    }

    @Override
    public PayBankNoteBookRecord value4(String value) {
        setMeanTypeId(value);
        return this;
    }

    @Override
    public PayBankNoteBookRecord value5(String value) {
        setStartNumber(value);
        return this;
    }

    @Override
    public PayBankNoteBookRecord value6(String value) {
        setEndNumber(value);
        return this;
    }

    @Override
    public PayBankNoteBookRecord value7(String value) {
        setCurrentNumber(value);
        return this;
    }

    @Override
    public PayBankNoteBookRecord value8(String value) {
        setPrefixNumber(value);
        return this;
    }

    @Override
    public PayBankNoteBookRecord values(Long value1, Long value2, String value3, String value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PayBankNoteBookRecord
     */
    public PayBankNoteBookRecord() {
        super(PayBankNoteBook.PAY_BANK_NOTE_BOOK);
    }

    /**
     * Create a detached, initialised PayBankNoteBookRecord
     */
    public PayBankNoteBookRecord(Long id, Long accountId, String statusId, String meanTypeId, String startNumber, String endNumber, String currentNumber, String prefixNumber) {
        super(PayBankNoteBook.PAY_BANK_NOTE_BOOK);

        setId(id);
        setAccountId(accountId);
        setStatusId(statusId);
        setMeanTypeId(meanTypeId);
        setStartNumber(startNumber);
        setEndNumber(endNumber);
        setCurrentNumber(currentNumber);
        setPrefixNumber(prefixNumber);
    }
}
