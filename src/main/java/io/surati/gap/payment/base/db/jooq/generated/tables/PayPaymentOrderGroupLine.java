/*
 * This file is generated by jOOQ.
 */
package io.surati.gap.payment.base.db.jooq.generated.tables;


import io.surati.gap.payment.base.db.jooq.generated.Keys;
import io.surati.gap.payment.base.db.jooq.generated.Public;
import io.surati.gap.payment.base.db.jooq.generated.tables.records.PayPaymentOrderGroupLineRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PayPaymentOrderGroupLine extends TableImpl<PayPaymentOrderGroupLineRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.pay_payment_order_group_line</code>
     */
    public static final PayPaymentOrderGroupLine PAY_PAYMENT_ORDER_GROUP_LINE = new PayPaymentOrderGroupLine();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PayPaymentOrderGroupLineRecord> getRecordType() {
        return PayPaymentOrderGroupLineRecord.class;
    }

    /**
     * The column <code>public.pay_payment_order_group_line.order_id</code>.
     */
    public final TableField<PayPaymentOrderGroupLineRecord, Long> ORDER_ID = createField(DSL.name("order_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.pay_payment_order_group_line.group_id</code>.
     */
    public final TableField<PayPaymentOrderGroupLineRecord, Long> GROUP_ID = createField(DSL.name("group_id"), SQLDataType.BIGINT.nullable(false), this, "");

    private PayPaymentOrderGroupLine(Name alias, Table<PayPaymentOrderGroupLineRecord> aliased) {
        this(alias, aliased, null);
    }

    private PayPaymentOrderGroupLine(Name alias, Table<PayPaymentOrderGroupLineRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.pay_payment_order_group_line</code> table reference
     */
    public PayPaymentOrderGroupLine(String alias) {
        this(DSL.name(alias), PAY_PAYMENT_ORDER_GROUP_LINE);
    }

    /**
     * Create an aliased <code>public.pay_payment_order_group_line</code> table reference
     */
    public PayPaymentOrderGroupLine(Name alias) {
        this(alias, PAY_PAYMENT_ORDER_GROUP_LINE);
    }

    /**
     * Create a <code>public.pay_payment_order_group_line</code> table reference
     */
    public PayPaymentOrderGroupLine() {
        this(DSL.name("pay_payment_order_group_line"), null);
    }

    public <O extends Record> PayPaymentOrderGroupLine(Table<O> child, ForeignKey<O, PayPaymentOrderGroupLineRecord> key) {
        super(child, key, PAY_PAYMENT_ORDER_GROUP_LINE);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<PayPaymentOrderGroupLineRecord> getPrimaryKey() {
        return Keys.PAY_PAYMENT_ORDER_GROUP_LINE_PKEY;
    }

    @Override
    public List<UniqueKey<PayPaymentOrderGroupLineRecord>> getKeys() {
        return Arrays.<UniqueKey<PayPaymentOrderGroupLineRecord>>asList(Keys.PAY_PAYMENT_ORDER_GROUP_LINE_PKEY);
    }

    @Override
    public List<ForeignKey<PayPaymentOrderGroupLineRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PayPaymentOrderGroupLineRecord, ?>>asList(Keys.PAY_PAYMENT_ORDER_GROUP_LINE__PAY_PAYMENT_ORDER_GROUP_LINE_ORDER_ID_FKEY, Keys.PAY_PAYMENT_ORDER_GROUP_LINE__PAY_PAYMENT_ORDER_GROUP_LINE_GROUP_ID_FKEY);
    }

    private transient PayPaymentOrder _payPaymentOrder;
    private transient PayPaymentOrderGroup _payPaymentOrderGroup;

    public PayPaymentOrder payPaymentOrder() {
        if (_payPaymentOrder == null)
            _payPaymentOrder = new PayPaymentOrder(this, Keys.PAY_PAYMENT_ORDER_GROUP_LINE__PAY_PAYMENT_ORDER_GROUP_LINE_ORDER_ID_FKEY);

        return _payPaymentOrder;
    }

    public PayPaymentOrderGroup payPaymentOrderGroup() {
        if (_payPaymentOrderGroup == null)
            _payPaymentOrderGroup = new PayPaymentOrderGroup(this, Keys.PAY_PAYMENT_ORDER_GROUP_LINE__PAY_PAYMENT_ORDER_GROUP_LINE_GROUP_ID_FKEY);

        return _payPaymentOrderGroup;
    }

    @Override
    public PayPaymentOrderGroupLine as(String alias) {
        return new PayPaymentOrderGroupLine(DSL.name(alias), this);
    }

    @Override
    public PayPaymentOrderGroupLine as(Name alias) {
        return new PayPaymentOrderGroupLine(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PayPaymentOrderGroupLine rename(String name) {
        return new PayPaymentOrderGroupLine(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PayPaymentOrderGroupLine rename(Name name) {
        return new PayPaymentOrderGroupLine(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
