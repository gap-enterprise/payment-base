/*
 * This file is generated by jOOQ.
 */
package io.surati.gap.payment.base.db.jooq.generated.tables.records;


import io.surati.gap.payment.base.db.jooq.generated.tables.PayBankNote;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PayBankNoteRecord extends UpdatableRecordImpl<PayBankNoteRecord> implements Record3<Long, Long, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.pay_bank_note.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.pay_bank_note.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.pay_bank_note.book_id</code>.
     */
    public void setBookId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.pay_bank_note.book_id</code>.
     */
    public Long getBookId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.pay_bank_note.due_date</code>.
     */
    public void setDueDate(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.pay_bank_note.due_date</code>.
     */
    public LocalDate getDueDate() {
        return (LocalDate) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, LocalDate> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, LocalDate> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PayBankNote.PAY_BANK_NOTE.ID;
    }

    @Override
    public Field<Long> field2() {
        return PayBankNote.PAY_BANK_NOTE.BOOK_ID;
    }

    @Override
    public Field<LocalDate> field3() {
        return PayBankNote.PAY_BANK_NOTE.DUE_DATE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getBookId();
    }

    @Override
    public LocalDate component3() {
        return getDueDate();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getBookId();
    }

    @Override
    public LocalDate value3() {
        return getDueDate();
    }

    @Override
    public PayBankNoteRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PayBankNoteRecord value2(Long value) {
        setBookId(value);
        return this;
    }

    @Override
    public PayBankNoteRecord value3(LocalDate value) {
        setDueDate(value);
        return this;
    }

    @Override
    public PayBankNoteRecord values(Long value1, Long value2, LocalDate value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PayBankNoteRecord
     */
    public PayBankNoteRecord() {
        super(PayBankNote.PAY_BANK_NOTE);
    }

    /**
     * Create a detached, initialised PayBankNoteRecord
     */
    public PayBankNoteRecord(Long id, Long bookId, LocalDate dueDate) {
        super(PayBankNote.PAY_BANK_NOTE);

        setId(id);
        setBookId(bookId);
        setDueDate(dueDate);
    }
}
