/*
 * This file is generated by jOOQ.
 */
package io.surati.gap.payment.base.db.jooq.generated.tables.records;


import io.surati.gap.payment.base.db.jooq.generated.tables.PayPaymentBatchLine;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PayPaymentBatchLineRecord extends UpdatableRecordImpl<PayPaymentBatchLineRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.pay_payment_batch_line.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.pay_payment_batch_line.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.pay_payment_batch_line.batch_id</code>.
     */
    public void setBatchId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.pay_payment_batch_line.batch_id</code>.
     */
    public Long getBatchId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PayPaymentBatchLine.PAY_PAYMENT_BATCH_LINE.ID;
    }

    @Override
    public Field<Long> field2() {
        return PayPaymentBatchLine.PAY_PAYMENT_BATCH_LINE.BATCH_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getBatchId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getBatchId();
    }

    @Override
    public PayPaymentBatchLineRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PayPaymentBatchLineRecord value2(Long value) {
        setBatchId(value);
        return this;
    }

    @Override
    public PayPaymentBatchLineRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PayPaymentBatchLineRecord
     */
    public PayPaymentBatchLineRecord() {
        super(PayPaymentBatchLine.PAY_PAYMENT_BATCH_LINE);
    }

    /**
     * Create a detached, initialised PayPaymentBatchLineRecord
     */
    public PayPaymentBatchLineRecord(Long id, Long batchId) {
        super(PayPaymentBatchLine.PAY_PAYMENT_BATCH_LINE);

        setId(id);
        setBatchId(batchId);
    }
}
